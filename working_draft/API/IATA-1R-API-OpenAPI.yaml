{
  "openapi": "3.0.1",
  "info": {
    "title": "ONE Record API specification",
    "description": "For details refer to the online documentation here: [https://www.iata.org/one-record/#tab-2](https://www.iata.org/one-record/#tab-2)",
    "contact": {
      "name": "IATA ONE Record",
      "url": "https://www.iata.org/whatwedo/cargo/e/Pages/one-record.aspx",
      "email": "onerecord@iata.org"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2.0"
  },
  "tags": [
    {
      "name": "logistics-objects",
      "description": "Create and retrieve logistics objecsts"
    },
    {
      "name": "audit-trail",
      "description": "access the change history of a logistics object"
    },
    {
      "name": "access-control",
      "description": "access control management"
    },
    {
      "name": "event-resource",
      "description": "Event Resource"
    },
    {
      "name": "subscription",
      "description": "Subscription to a logistics object"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "tags": [
          "logistics-objects"
        ],
        "summary": "Creates a logistics object",
        "operationId": "addLogisticsObjectUsingPOST",
        "requestBody": {
          "required": true,
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Logistics object has been created",
            "headers": {
              "x-location": {
                "description": "uri of the newly created logistics object",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Request not authorized"
          },
          "404": {
            "description": "Logistics object not found"
          }
        },
        "deprecated": false
      }
    },
    "/{loid}/": {
      "get": {
        "tags": [
          "logistics-objects"
        ],
        "summary": "Retrieves a logistics object, of a previous state of logistics object if the \"at\" query is included",
        "operationId": "getLogisticsObjectAtUsingGET",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "Logistics object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "at",
            "in": "query",
            "description": "ISO8601 datetime of required previou state of the logistics object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Body"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Logistics object not found",
            "content": {}
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "logistics-objects"
        ],
        "summary": "sends a request for update to the data host",
        "operationId": "updateLogisticsObjectUsingPATCH",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "Logistics object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "request for update is received but pending"
          },
          "204": {
            "description": "The update has  been successful"
          },
          "403": {
            "description": "Not authorized"
          }
        },
        "deprecated": false
      }
    },
    "/all": {
      "get": {
        "tags": [
          "logistics-objects"
        ],
        "summary": "Retrieves all logistics objects (that the requestor is authorized to access)",
        "operationId": "getAllLogisticsObjectsUsingGET",
        "parameters": [
          {
            "name": "search-string",
            "in": "query",
            "description": "search string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Body"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Logistics object not found",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/{loid}/acl": {
      "get": {
        "tags": [
          "access-control"
        ],
        "summary": "Retrieves the Access Control List of a given logistics object",
        "operationId": "getACLUsingGET",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "loid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Acl"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/acl": {
      "get": {
        "tags": [
          "access-control"
        ],
        "summary": "Retrieves the Access Control List for all logistics objects",
        "operationId": "getAllACLUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Acl"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/{loid}/audittrail": {
      "get": {
        "tags": [
          "audit-trail"
        ],
        "summary": "Retrieves the audit trail, history of patch requests, of a the logistics object",
        "operationId": "getAuditTrailUsingGET",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "Logistics object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "from this datetime",
            "schema": {
              "type": "string",
              "format": "ISO8601 datetime"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "to this datetime",
            "schema": {
              "type": "string",
              "format": "ISO8601 datetime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditTrail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/{loid}/events": {
      "get": {
        "tags": [
          "event-resource"
        ],
        "summary": "Retrieves the events of a given logistics object",
        "operationId": "getEventsUsingGET",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "loid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "event-resource"
        ],
        "summary": "Creates events for a given logistics object",
        "operationId": "addEventsUsingPOST",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "loid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "event",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "event"
      }
    },
    "/delegation": {
      "post": {
        "tags": [
          "access-control"
        ],
        "summary": "Request delegation of access for third party to access a logistics object",
        "operationId": "delegateUsingPOST",
        "requestBody": {
          "description": "delegationRequest",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/DelegationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Delegation request received",
            "content": {}
          },
          "201": {
            "description": "Delegation decision has been approved",
            "content": {}
          },
          "403": {
            "description": "Access unauthorized",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/subscription": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "get all subscriptions",
        "operationId": "getAllSubscriptionsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/{loid}/subscription/": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Request a subscription to an existing logistics object",
        "operationId": "addSubscriptionInformationUsingPOST",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "Logistics object ID for which a subscription has been requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Subscriptio request",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "subscription"
      }
    },
    "/{loid}/notification": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Notifies a company of a new logistics object or an update to one",
        "operationId": "addSubscriptionInformationnUsingPOST",
        "parameters": [
          {
            "name": "loid",
            "in": "path",
            "description": "Logistics object ID for which a subscription has been requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Subscriptio request",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "subscription"
      }
    }
  },
  "components": {
    "schemas": {
      "DelegationRequest": {
        "title": "DelegationRequest",
        "type": "object",
        "example": {
          "@context": {
            "iata": "https://onerecord.iata.org/",
            "api": "https://onerecord.iata.org/api",
            "host": "https://mycompany.com/"
          },
          "@type": [
            "api:DelegationRequest"
          ],
          "api:DelegationRequest#action": "DELEGATE",
          "api:DelegationRequest#operations": [
            "GET"
          ],
          "api:DelegationRequest#targetCompanies": [
            "http://localhost:8080/companies/test"
          ],
          "api:DelegationRequest#targetLogisticsObjects": [
            {
              "@type": [
                "api:LogisticsObjectRef"
              ],
              "api:LogisticsObjectRef#logisticsObjectId": "host:lo1",
              "api:LogisticsObjectRef#logisticsObjectType": "iata:Waybill"
            }
          ]
        }
      },
      "Event": {
        "title": "Event",
        "type": "object",
        "example": {
          "@context": {
            "iata": "https://onerecord.iata.org/"
          },
          "@type": "iata:Event",
          "iata:event:linkedObject": {
            "@id": "iata:LogisticsObjectId",
            "@type": "iata:LogisticsObject"
          },
          "iata:event:location": {
            "@id": "iata:Location/thisObjectId",
            "@type": "iata:Location"
          },
          "iata:event:performedBy": {
            "@id": "iata:Company/thisObjectId",
            "@type": "iata:Company"
          },
          "iata:event:dateTime": "dateTime",
          "iata:event:eventCode": "string",
          "iata:event:eventName": "string",
          "iata:event:eventTypeIndicator": "string"
        }
      },
      "Subscription": {
        "title": "Subscription",
        "type": "object",
        "example": {
          "@type": "api:Subscription",
          "@context": {
            "iata": "https://onerecord.iata.org/",
            "api": "https://onerecord.iata.org/api",
            "subscriber": "https://subscribingcompany.com/"
          },
          "api:Subscription#cacheFor": "86400",
          "api:Subscription#callbackUrl": "subscriber:callback",
          "api:Subscription#notificationsFilter": {
            "@type": "api:filter"
          },
          "api:Subscription#secret": "secretkeystring",
          "api:Subscription#sendLogisticsObjectBody": false
        }
      },
      "Acl": {
        "title": "ACL",
        "type": "object",
        "example": {
          "@context": {
            "w3c": "http://www.w3.org/ns/",
            "cargo": "https://onerecord.iata.org/",
            "api": "https://onerecord.iata.org/api/",
            "publisher": "https://publisher.com/",
            "subscriber": "https://subscriber.com/"
          },
          "@type": "w3c:auth/acl#Authorization",
          "w3c:auth/acl#accessTo": {
            "api:LogisticsObjectRef#logisticsObjectId": "publisher:lo_123",
            "api:LogisticsObjectRef#logisticsObjectType": "cargo:Booking"
          },
          "w3c:auth/acl#agent": {
            "@id": "subscriber:company"
          },
          "w3c:auth/acl#mode": "acl:Read, acl:Write"
        }
      },
      "Body": {
        "title": "LogisticsObject",
        "type": "object",
        "example": {
          "@context": {
            "iata": "https://onerecord.iata.org/"
          },
          "@type": "iata:Sensor",
          "iata:sensor:iotDevice": {
            "@id": "iata:IotDevice/thisObjectId",
            "@type": "iata:IotDevice"
          },
          "iata:sensor:sensorDescription": "a description of the sensor",
          "iata:sensor:sensorName": "device name",
          "iata:sensor:sensorSerialNumber": "a serial number",
          "iata:sensor:sensorType": "type of device"
        }
      },
      "MultipleLos": {
        "title": "LogisticsObjects",
        "type": "object",
        "example": {
          "@context": {
            "iata": "https://onerecord.iata.org/"
          },
          "logisticsObjects": [
            {
              "iata:sensor:iotDevice": {
                "@id": "iata:IotDevice/sensor_123",
                "@type": "iata:IotDevice"
              },
              "iata:sensor:sensorDescription": "a description of the sensor",
              "iata:sensor:sensorName": "device name",
              "iata:sensor:sensorSerialNumber": "a serial number",
              "iata:sensor:sensorType": "type of device"
            },
            {
              "iata:sensor:iotDevice": {
                "@id": "iata:IotDevice/sensor_456",
                "@type": "iata:IotDevice"
              },
              "iata:sensor:sensorDescription": "another description of the sensor",
              "iata:sensor:sensorName": "another device name",
              "iata:sensor:sensorSerialNumber": "another serial number",
              "iata:sensor:sensorType": "another type of device"
            }
          ]
        }
      },
      "PatchBody": {
        "title": "PatchRequest",
        "type": "object",
        "example": {
          "@context": {
            "iata": "https://onerecord.iata.org/",
            "api": "https://onerecord.iata.org/api",
            "w3c": "https://www.w3.org/2001/",
            "host": "https://www.companyserver.com"
          },
          "@type": [
            "api:PatchRequest"
          ],
          "api:PatchRequest#description": "Change co-load",
          "api:PatchRequest#logisticsObjectRef": {
            "@type": [
              "api:LogisticsObjectRef"
            ],
            "api:LogisticsObjectRef#logisticsObjectId": "host:logisticsobject/Piece_770327",
            "api:LogisticsObjectRef#logisticsObjectType": "iata:Piece"
          },
          "api:PatchRequest#operations": [
            {
              "@type": [
                "api:Operation"
              ],
              "api:Operation#o": {
                "@type": [
                  "api:OperationObject"
                ],
                "api:OperationObject#datatype": "w3c:XMLSchema#boolean",
                "api:OperationObject#value": "true"
              },
              "api:Operation#op": "del",
              "api:Operation#p": "iata:Piece#coload"
            },
            {
              "@type": [
                "api:Operation"
              ],
              "api:Operation#o": {
                "@type": [
                  "api:OperationObject"
                ],
                "api:OperationObject#datatype": "w3c:XMLSchema#boolean",
                "api:OperationObject#value": "false"
              },
              "api:Operation#op": "add",
              "api:Operation#p": "iata:Piece#coload"
            }
          ],
          "api:PatchRequest#requestorCompanyIdentifier": "host",
          "api:PatchRequest#revision": "1"
        }
      },
      "AuditTrail": {
        "title": "AuditTrail",
        "type": "object",
        "example": {
          "@type": "api:AuditTrail",
          "@context": {
            "cargo": "https://onerecord.iata.org/cargo/",
            "api": "https://onerecord.iata.org/api/",
            "host": "http://myhost/"
          },
          "api:AuditTrail#latestRevision": "2",
          "api:AuditTrail#changeResponses": [
            {
              "@type": "api:ChangeRequest",
              "api:changeResponse#patchRequest": {
                "type": "api:patchRequest"
              },
              "api:changeResponse#companyId": "myCompany",
              "api:changeResponse#status": "ACCEPTED",
              "api:changeResponse#timestamp": "2020-09-07T11:55:45.768Z",
              "api:AuditTrail#errors": [
                {
                  "@type": "api:Error"
                }
              ],
              "api:AuditTrail#logisticsObjectRef": {
                "@type": "api:LogisticsObjectRef",
                "api:LogisticsObjectRef#logisticsObjectId": "http://wwww.myhost.com/Sensor_715823",
                "api:LogisticsObjectRef#logisticsObjectType": "cargo:Sensor#sensorType"
              }
            },
            {
              "@type": "api:ChangeRequest",
              "api:changeResponse#patchRequest": {
                "type": "api:patchRequest"
              },
              "api:changeResponse#companyId": "myCompany",
              "api:changeResponse#status": "ACCEPTED",
              "api:changeResponse#timestamp": "2020-09-06T05:33:12.123Z",
              "api:AuditTrail#errors": [
                {
                  "@type": "api:Error"
                }
              ],
              "api:AuditTrail#logisticsObjectRef": {
                "@type": "api:LogisticsObjectRef",
                "api:LogisticsObjectRef#logisticsObjectId": "http://wwww.myhost.com/Sensor_715823",
                "api:LogisticsObjectRef#logisticsObjectType": "cargo:Sensor#sensorType"
              }
            }
          ]
        }
      }
    }
  }
}
